% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/emeScheme_extract.R
\name{emeScheme_extract}
\alias{emeScheme_extract}
\title{Extract metadasta from one dataFile from an \code{emeScheme} object}
\usage{
emeScheme_extract(dataFile, x)
}
\arguments{
\item{dataFile}{name of dataFile whose metadata will be extracted from
\code{x}. Has to be an exact match, no wildcards are expanded.}

\item{x}{\code{emeScheme} object from which to extract the metadata}
}
\value{
An \code{emeScheme} object containing metadata for the data file \code{dataFileName}
}
\description{
One \code{emeScheme} object can contain metadata for multiple dataFiles. For
archiving, these should be split into single \code{emeScheme} objects, one
for each \code{DataFileNameMetaData$dataFileName}. This function extracts the
metadasta from one dataFile in an \code{emeScheme} object and returns an
\code{emeScheme} object.
}
\details{
The filtering is done as followed:
\describe{
  \item{DataFileMetaDFata}{\code{DataFileMetaData$dataFileName == dataFile}}
  \item{Treatment}{\code{Treatment$parameter \%in\% DataFileMetaData$mappingColumn}
    and \code{DataFileMetaData$columnData == "Treatment"} }
  \item{Measurement}{\code{Measurement$name \%in\% DataFileMetaData$mappingColumn}
    and \code{DataFileMetaData$columnData == "Measurement"} }
}
}
\examples{
emeScheme_extract("smell.csv", dmdScheme_example())
## returns the emeScheme data for the data file 'smell.csv'

emeScheme_extract("DoesNotExist", dmdScheme_example())
## returns an empty emeScheme
}
